- name: "Install PostgreSQL"
  apt:
    name: postgresql
    state: present

- name: "Install psycopg2 (for Ansible)"
  apt:
    name: python-psycopg2
    state: present

- name: "Create databases for CTF Gameserver"
  postgresql_db:
    name: "{{ item }}"
    state: present
    login_unix_socket: /run/postgresql
  with_items:
    - "{{ ctf_gameserver_db_name }}"
    - "{{ ctf_gameserver_statedb_name }}"
  run_once: true
  become: true
  become_user: postgres

- name: "Revoke privileges for PUBLIC from the databases"
  postgresql_privs:
    database: "{{ item }}"
    type: database
    roles: PUBLIC
    privs: ALL
    state: absent
    login_unix_socket: /run/postgresql
  with_items:
    - "{{ ctf_gameserver_db_name }}"
    - "{{ ctf_gameserver_statedb_name }}"
  run_once: true
  become: true
  become_user: postgres

# Use the default "public" schema and make it not-so-public, this is a common practice according to
# https://stackoverflow.com/a/25586847
- name: "Revoke privileges for PUBLIC from the database schemas"
  postgresql_privs:
    database: "{{ item }}"
    type: schema
    objs: public
    roles: PUBLIC
    privs: ALL
    state: absent
    login_unix_socket: /run/postgresql
  with_items:
    - "{{ ctf_gameserver_db_name }}"
    - "{{ ctf_gameserver_statedb_name }}"
  run_once: true
  become: true
  become_user: postgres

- name: "Create database users for CTF Gameserver components"
  postgresql_user:
    name: "{{ item.user }}"
    password: "{{ item.pass }}"
    encrypted: true
    state: present
    login_unix_socket: /run/postgresql
  with_items:
    - user: "{{ ctf_gameserver_db_user_controller }}"
      pass: "{{ ctf_gameserver_db_pass_controller }}"
    - user: "{{ ctf_gameserver_db_user_web }}"
      pass: "{{ ctf_gameserver_db_pass_web }}"
    - user: "{{ ctf_gameserver_db_user_checker }}"
      pass: "{{ ctf_gameserver_db_pass_checker }}"
    - user: "{{ ctf_gameserver_db_user_submission }}"
      pass: "{{ ctf_gameserver_db_pass_submission }}"
    - user: "{{ ctf_gameserver_statedb_user }}"
      pass: "{{ ctf_gameserver_statedb_pass }}"
  run_once: true
  become: true
  become_user: postgres
  # Hide passwords from the command line output
  no_log: true

- name: "Allow database users to connect to the Gameserver database"
  postgresql_privs:
    database: "{{ ctf_gameserver_db_name }}"
    type: database
    roles: "{{ item }}"
    privs: CONNECT
    state: present
    login_unix_socket: /run/postgresql
  with_items:
    - "{{ ctf_gameserver_db_user_controller }}"
    - "{{ ctf_gameserver_db_user_web }}"
    - "{{ ctf_gameserver_db_user_checker }}"
    - "{{ ctf_gameserver_db_user_submission }}"
  run_once: true
  become: true
  become_user: postgres

- name: "Allow checker state user to connect to the checker state database"
  postgresql_privs:
    database: "{{ ctf_gameserver_statedb_name }}"
    type: database
    roles: "{{ ctf_gameserver_statedb_user }}"
    privs: CONNECT
    state: present
    login_unix_socket: /run/postgresql
  run_once: true
  become: true
  become_user: postgres

- name: "Allow database users to use the Gameserver database schema"
  postgresql_privs:
    database: "{{ ctf_gameserver_db_name }}"
    type: schema
    objs: public
    roles: "{{ item }}"
    privs: USAGE
    state: present
    login_unix_socket: /run/postgresql
  with_items:
    - "{{ ctf_gameserver_db_user_controller }}"
    - "{{ ctf_gameserver_db_user_web }}"
    - "{{ ctf_gameserver_db_user_checker }}"
    - "{{ ctf_gameserver_db_user_submission }}"
  run_once: true
  become: true
  become_user: postgres

- name: "Allow checker state user to use the checker state database schema"
  postgresql_privs:
    database: "{{ ctf_gameserver_statedb_name }}"
    type: schema
    objs: public
    roles: "{{ ctf_gameserver_statedb_user }}"
    privs: USAGE
    state: present
    login_unix_socket: /run/postgresql
  run_once: true
  become: true
  become_user: postgres

- name: "Initialize checker state database"
  # The `quote` filter appears to use single quotes
  command: >
    psql -c "CREATE TABLE ctf_checkerstate (team_id INTEGER, service_id INTEGER,
    identifier CHARACTER VARYING (128), data BYTEA);" {{ ctf_gameserver_statedb_name|quote }}
  register: ctf_gameserver_statedb_create
  failed_when: ctf_gameserver_statedb_create.rc != 0 and 'already exists' not in ctf_gameserver_statedb_create.stderr
  changed_when: "'already exists' not in ctf_gameserver_statedb_create.stderr"
  run_once: true
  become: true
  become_user: postgres

# Don't do this at database initialization as `ctf_gameserver_statedb_user` might change
- name: "Set owner for checker state database"
  command: >
    psql -c "ALTER TABLE ctf_checkerstate OWNER TO {{ ctf_gameserver_statedb_user|quote }};"
    {{ ctf_gameserver_statedb_name|quote }}
  run_once: true
  become: true
  become_user: postgres

- name: "(Temporarily) allow web component database user to create objects in the schema"
  postgresql_privs:
    database: "{{ ctf_gameserver_db_name }}"
    type: schema
    objs: public
    roles: "{{ ctf_gameserver_db_user_web }}"
    privs: CREATE
    state: present
    login_unix_socket: /run/postgresql
  run_once: true
  become: true
  become_user: postgres
