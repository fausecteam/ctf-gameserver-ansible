- name: "Install psycopg2 (for Ansible)"
  ansible.builtin.apt:
    name: python3-psycopg2
    state: present

- name: "Prevent web component database user from creating objects in the schema"
  community.postgresql.postgresql_privs:
    database: "{{ ctf_gameserver_db_name }}"
    type: schema
    objs: public
    roles: "{{ ctf_gameserver_db_user_web }}"
    privs: CREATE
    state: absent
    login_unix_socket: /run/postgresql
  run_once: true
  become: true
  become_user: postgres

- name: "Grant controller component database user necessary table permissions"
  community.postgresql.postgresql_privs:
    database: "{{ ctf_gameserver_db_name }}"
    type: table
    objs: "{{ item.table }}"
    roles: "{{ ctf_gameserver_db_user_controller }}"
    privs: "{{ item.privs }}"
    state: present
    login_unix_socket: /run/postgresql
  with_items:
    - table: auth_user
      privs: SELECT
    - table: registration_team
      privs: SELECT
    - table: scoring_capture
      privs: SELECT
    - table: scoring_flag
      privs: SELECT,INSERT,UPDATE
    - table: scoring_gamecontrol
      privs: SELECT,INSERT,UPDATE
    - table: scoring_scoreboard
      privs: SELECT,INSERT,UPDATE,DELETE
    - table: scoring_service
      privs: SELECT
    - table: scoring_statuscheck
      privs: SELECT
  run_once: true
  become: true
  become_user: postgres

- name: "Grant controller component database user permission on flag ID sequence"
  community.postgresql.postgresql_privs:
    database: "{{ ctf_gameserver_db_name }}"
    type: sequence
    objs: scoring_flag_id_seq
    roles: "{{ ctf_gameserver_db_user_controller }}"
    privs: SELECT,UPDATE
    state: present
    login_unix_socket: /run/postgresql
  run_once: true
  become: true
  become_user: postgres

- name: "Grant checker component database user necessary table permissions"
  community.postgresql.postgresql_privs:
    database: "{{ ctf_gameserver_db_name }}"
    type: table
    objs: "{{ item.table }}"
    roles: "{{ ctf_gameserver_db_user_checker }}"
    privs: "{{ item.privs }}"
    state: present
    login_unix_socket: /run/postgresql
  with_items:
    - table: registration_team
      privs: SELECT
    - table: scoring_checkerstate
      privs: SELECT,INSERT,UPDATE
    - table: scoring_flag
      privs: SELECT,UPDATE
    - table: scoring_gamecontrol
      privs: SELECT
    - table: scoring_service
      privs: SELECT
    - table: scoring_statuscheck
      privs: SELECT,INSERT
  run_once: true
  become: true
  become_user: postgres

- name: "Grant checker component database user necessary sequence permissions"
  community.postgresql.postgresql_privs:
    database: "{{ ctf_gameserver_db_name }}"
    type: sequence
    objs: "{{ item.table }}"
    roles: "{{ ctf_gameserver_db_user_checker }}"
    privs: "{{ item.privs }}"
    state: present
    login_unix_socket: /run/postgresql
  with_items:
    - table: scoring_statuscheck_id_seq
      privs: SELECT,UPDATE
    - table: scoring_checkerstate_id_seq
      privs: SELECT,UPDATE
  run_once: true
  become: true
  become_user: postgres

- name: "Grant submission component database user necessary table permissions"
  community.postgresql.postgresql_privs:
    database: "{{ ctf_gameserver_db_name }}"
    type: table
    objs: "{{ item.table }}"
    roles: "{{ ctf_gameserver_db_user_submission }}"
    privs: "{{ item.privs }}"
    state: present
    login_unix_socket: /run/postgresql
  with_items:
    - table: registration_team
      privs: SELECT
    - table: scoring_capture
      privs: SELECT,INSERT
    - table: scoring_flag
      privs: SELECT
    - table: scoring_gamecontrol
      privs: SELECT
  run_once: true
  become: true
  become_user: postgres

- name: "Grant submission component database user permission on capture ID sequence"
  community.postgresql.postgresql_privs:
    database: "{{ ctf_gameserver_db_name }}"
    type: sequence
    objs: scoring_capture_id_seq
    roles: "{{ ctf_gameserver_db_user_submission }}"
    privs: SELECT,UPDATE
    state: present
    login_unix_socket: /run/postgresql
  run_once: true
  become: true
  become_user: postgres

- name: "Grant vpnstatus component database user necessary table permissions"
  postgresql_privs:
    database: "{{ ctf_gameserver_db_name }}"
    type: table
    objs: "{{ item.table }}"
    roles: "{{ ctf_gameserver_db_user_vpnstatus }}"
    privs: "{{ item.privs }}"
    state: present
    login_unix_socket: /run/postgresql
  with_items:
    - table: auth_user
      privs: SELECT
    - table: registration_team
      privs: SELECT
    - table: vpnstatus_vpnstatuscheck
      privs: INSERT
  run_once: true
  become: true
  become_user: postgres

- name: "Grant vpnstatus component database user necessary sequence permissions"
  postgresql_privs:
    database: "{{ ctf_gameserver_db_name }}"
    type: sequence
    objs: "{{ item.table }}"
    roles: "{{ ctf_gameserver_db_user_vpnstatus }}"
    privs: "{{ item.privs }}"
    state: present
    login_unix_socket: /run/postgresql
  with_items:
    - table: vpnstatus_vpnstatuscheck_id_seq
      privs: SELECT,UPDATE
  run_once: true
  become: true
  become_user: postgres
